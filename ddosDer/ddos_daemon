#!/bin/sh
##############################################################################
# Modfiy: liangshuhua, 2012-10-21 21:45:30                                   #
##############################################################################
# This program is distributed under the "Artistic License" Agreement         #
# The LICENSE file is located in the same directory as this program. Please  #
# read the LICENSE file before you make copies or distribute this program    #
##############################################################################
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin:/usr/local/DDos/sbin
export PATH
CONF_FILE="/usr/local/DDos/conf/ddos.conf"


# 输出版本号.
header()
{
	echo "version 2.1.0"
}

if [ $(id -u) != "0" ]; then
    header 
    echo "Error: You must be root to run!"
    exit 1
fi

# 先清空临时数据
clean_tmp() {
if [ -d $TMP_DIR ];then
   rm -f $TMP_DIR/*
else
   mkdir $TMP_DIR
fi

}

# 加载配置与各环境变量
load_conf()
{
	if [ -f "$CONF_FILE" ] && [ ! "$CONF_FILE" == "" ]; then
		source $CONF_FILE
		export NO_OF_CONNECTIONS
	
        	if [ -f "$CORE_NETSTAT" ];then
		    source $CORE_NETSTAT
		fi

		clean_tmp
	else
		header >> $LOGS_FILE
		echo "\$CONF_FILE not found." |tee -a $LOGS_FILE
		exit 1
	fi
}

############################################核心处理过程####################################################
active_exec() {
load_conf
header >> $LOGS_FILE
echo "[ddos_daemon] Running OK. [$(date +"%y-%m-%d %H:%M:%S")]" >> $LOGS_FILE
DDOS_PID="$PID_DIR"/ddos_daemon.SOCK
echo "$$" > $DDOS_PID
BLACK_LIST=`mktemp $TMP_DIR/ddos_backlist.XXXXXXXX`
BANNED_IP_MAIL=`mktemp $TMP_DIR/ddos_PREFIX.XXXXXXXX`
#echo "Banned the following ip addresses on [`date`]" > $BANNED_IP_MAIL
echo >>	$BANNED_IP_MAIL
>> $CROND_LIST

while true
do

   #根据连接数反应恶意连接,格式化数据,去掉重IP,判断IP是否已超过连接警戒数
   #这里使用了处理/proc/net/tcp文件取得连接IP，代替netstat，提高并发能力
   #netstat -ntu |grep -E $MONT_PORT|awk '{print $5}'|cut -f 1 -d :|sort|uniq -c|sort -rn|grep -v -E $IGNORE_IP > $BLACK_LIST
   core_netstat|awk '{print $1,$2,$3}'|grep -v -E $IGNORE_IP|grep -E "\[${MONT_PORT}\]"|sort|uniq -c|awk 'BEGIN{NO_OF_CONNECTIONS = ENVIRON["NO_OF_CONNECTIONS"];}($1 >= NO_OF_CONNECTIONS){printf("%d %s\n",$1,$4)}' > $BLACK_LIST

   #如果BLACK_LIST不为空则退处理
if [ ! -z "$(cat $BLACK_LIST)" ];then
if [ $KILL -eq 1 ]; then
	while read line; do
		CURR_LINE_CONN=$(echo $line | cut -d" " -f1)  #连接数
		CURR_LINE_IP=$(echo $line | cut -d" " -f2)    #连接IP

	      if [ "$CURR_LINE_CONN" -ge $NO_OF_CONNECTIONS ]; then
		#iptables没有重复条目
		 if [ `iptables -L -n|grep $CURR_LINE_IP|wc -l` -eq 0 ];then	   
			  $IPT -I INPUT -s $CURR_LINE_IP -j DROP
			  
                #crond_file里没有重复条目
			if [ `grep '$CURR_LINE_IP' $CROND_LIST|wc -l` -eq 0 ];then
			   echo "[$(date +"%y-%m-%d %H:%M:%S")] [$CURR_LINE_IP] with [$CURR_LINE_CONN] connections,Locked!" >> $LOGS_FILE
                           echo "$CURR_LINE_IP `date +%Y/%m/%d` `date +%H:%M:%S` `date +%s` LOCK" >> $CROND_LIST
                           echo "Banned the following ip addresses on [`date` Host:`hostname`]" > $BANNED_IP_MAIL	
     	                   echo "[$CURR_LINE_IP] with [$CURR_LINE_CONN] connections,Locked." >> $BANNED_IP_MAIL
	
			   # 发送邮件通知
			   if [ $SENDMAIL_ON -eq 1 ];then
			        $SENDMAIL_EXE $CURR_LINE_IP"_banned_On_" $BANNED_IP_MAIL >> $LOGS_FILE
			        #rm -f "$BANNED_IP_MAIL"
			   fi
                        fi
		   else
                       continue #有重复就跳本条目
		   fi
                fi
	done < $BLACK_LIST
fi
fi	
sleep $REXEC_TIME

done
}

active_exec | tee -a $LOGS_FILE
